  
  /* styling for the navigation(s) and unordered list elements to center them on the page and create space between links.*/ 
  .nav ul {
    width: 100%;
    padding-left: 30px;
    padding-right: 30%;
    display: flex;
  }

  .nav2 ul {
    width: 100%;
    padding-left: 30px;
    padding-right: 10px;
    display: flex;
  }

  /* can't get this to centre but I think I like it on the left as it is in line with the logo and rest of page content */
  label {
    justify-content: center;
  }

  /* the following removes the bullet point from the text within the list and centers the content, add padding around each link so they have space between and around them and makes them black. Logo is to centre the picture under the nav. */
  .nav-links {
    list-style: none;
    justify-content: center;
  }
  
  .nav-page a {
    display: inline-block;
    padding: 10px 15px;
    text-decoration: none;
    color: black;
  }
  
  .logo {
    align-items: center;
    justify-content: center;
    
  }
/* this element creates the border/seperators on my pages. I used it in a flex box so there is a line either side of the logo, it turns into one line depending on the viewport */
  hr.line {
    border-top: 2px solid;
  }

/* styling for main content on page, applies the font, padding so how far from the edge the content is*/

body {
    font-family: 'League Spartan', sans-serif;
    padding: 10%;
  }

  p {
    padding: 50px;
  }

  /* I've added this so that the page still looks the same but the screen reader will still be able tot find the h1 element and read out 'page under construction however this came up with an even worse WAVE report so I will keep the text as it is.*/

  #semantic{
   /* color: white;*/
    font-size:medium;
    padding: 50px;
        
  }

/* CSS for the grid to define how the items should display, 3 pictures in a block row */

  .grid-container {
    display: grid;
    grid-template-columns: auto auto auto;
  }

  .grid-item {
    display: block;
  }
 
 /* the following has been used to ensure the images are responsive for various screen displays and will be displayed at 100% of the screen width */

  img {
    max-width: 100%;
  }

  
  /* styling for the social media links within the footer, I have maniplutated the size of the images and am displaying them in an inline flex so that they are all in a row next to eachother */
#social {
    height: 30px;
    width: 30px;
    display: flex;
    padding: 50px;
}

#trademark {
  justify-content: center;
  align-items: center;
}


/* styling for form on contact page, first is styling for the text boxes, second is for the button */

input[type=text], select, textarea {
    width: 100%;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 15px;
    box-sizing: border-box;
    margin-top: 6px;
    margin-bottom: 16px;
    resize: vertical;
}
  
  input[type=submit] {
    background-color: #10714d;
    color: white;
    padding: 12px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }

  .form {
    border-radius: 5px;
    padding: 50px;
  }

  /*Styling for Index page, flexbox*/

  .flex-container {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    border: 10px 
}

.flex-item {
  flex-basis: 100px;
  padding: 10px;
  align-items: left;
}

.flex-item2 {
  flex-basis: 100px;
  font-size: 15px;
  padding: 10px;
  align-items: right;
}

  /*Styling for Asia page, flexbox*/

  .flex1 img {
    
      width: 32%;
      height: auto;
      padding: 3px;
  }

   /* to make the images responsive for different viewports */
  @media only screen and (max-width:600px) {
    .flex1 img{
      /*at first I couldn't get the images on the Asia page to be responsive but once I added width 100% it started working :)*/
      width: 100%;
      flex-direction: column;
    }

    .flex-item2{
      flex-basis: 100%;
    }

    .flex-item {
      flex-basis: 100%;
    }
  
    .flex-container{
      width: 100%;
      height: auto;
    }

    .grid-container {
      grid-template-columns: auto;
    }
  
    .grid-item {
      grid-column: 1 / 1;
    }

    .nav2 ul {
      width: 100%;
      flex-direction: column;
    }

  }

  @media only screen and (max-width:1000px) {
    .flex1 img{
      /*ipad view*/
      width: 100%;
      flex-direction: column;
    }
  }